"""
Data functions for covid19
"""
import pandas as pd

# Date that gets the integer zero: 2020/02/29
zero_dat = pd.Timestamp("2020/03/01T00:00")


def dat_to_int(dat, ):
    """
    Turning the datetime instance dat into an integer.

    Zero is set to February 29th, 2020.

    The first of March is one.
    """

    # Difference of the current date in nanoseconds
    datint = (dat - zero_dat).delta

    # Nanoseconds to days
    datint = datint / 10.0**9 / 3600.0 / 24.0

    return datint


# Dates of years 2019/2020
x_dates = pd.DataFrame([
    dat_to_int(dat) for dat in
    [pd.Timestamp("2019/01/01") + pd.Timedelta(days=i) for i in range(731)]
],
                       index=[
                           pd.Timestamp("2019/01/01") + pd.Timedelta(days=i)
                           for i in range(731)
                       ],
                       columns=["x"])

x_hours = pd.DataFrame([
    dat_to_int(dat) for dat in [
        pd.Timestamp("2019/01/01") + pd.Timedelta(hours=i)
        for i in range(731 * 24)
    ]
],
                       index=[
                           pd.Timestamp("2019/01/01") + pd.Timedelta(hours=i)
                           for i in range(731 * 24)
                       ],
                       columns=["x"])


def add_x(covid_df):
    """
    Add numerical array corresponding to Datetimes for fits
    """

    x = get_x(covid_df)

    covid_df["x"] = x["x"]


def get_x(covid_df):
    """
    Get numerical array corresponding to Datetimes for fits
    """

    x = pd.DataFrame(
        [
         datdelta.delta / 10.0**9 / 3600.0 / 24.0
         for datdelta in covid_df.index - zero_dat
        ],
        index=covid_df.index,
        columns=["x"])

    return x
