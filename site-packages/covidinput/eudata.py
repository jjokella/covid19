import os
import numpy as np
import pandas as pd
import covidfuncs.dffuncs as cvdff

ecdc_naming = {
    'IT': 'Italy',
    'ES': 'Spain',
    'FR': 'France',
    'DE': 'Germany',
    'United GB': 'Kingdom',
    'GB': 'United_Kingdom',
    'NL': 'Netherlands',
    'AT': 'Austria',
    'BE': 'Belgium',
    'NO': 'Norway',
    'SE': 'Sweden',
    'DK': 'Denmark',
    'PT': 'Portugal',
    'Czech CZ': 'Republic',
    'CZ': 'Czech_Republic',
    'GR': 'Greece',
    'FI': 'Finland',
    'IE': 'Ireland',
    'PL': 'Poland',
    'SI': 'Slovenia',
    'RO': 'Romania',
    'EE': 'Estonia',
    'IS': 'Iceland',
    'LU': 'Luxembourg',
    'SK': 'Slovakia',
    'BG': 'Bulgaria',
    'HR': 'Croatia',
    'HU': 'Hungary',
    'LV': 'Latvia',
    'CY': 'Cyprus',
    'MT': 'Malta',
    'LT': 'Lithuania',
    'LI': 'Liechtenstein',
    'sum': 'Europe'
}

de_naming = {
    'Bremen': 'Bremen',
    'Mecklenburg-Vor­pommern': 'Mecklenburg-Vorpommern',
    'Sachsen-Anhalt': 'Sachsen-Anhalt',
    'Thüringen': 'Thüringen',
    'Brandenburg': 'Brandenburg',
    'Saarland': 'Saarland',
    'Schles­wig-Holstein': 'Schleswig-Holstein',
    'Sachsen': 'Sachsen',
    'Hamburg': 'Hamburg',
    'Berlin': 'Berlin',
    'Rhein­land-Pfalz': 'Rheinland-Pfalz',
    'Hessen': 'Hessen',
    'Niedersachsen': 'Niedersachsen',
    'Baden-Württem­berg': 'Baden-Württemberg',
    'Nordrhein-West­falen': 'Nordrhein-Westfalen',
    'Bayern': 'Bayern',
    'Bremen-Deaths': 'Bremen-Deaths',
    'Mecklenburg-Vor­pommern-Deaths': 'Mecklenburg-Vorpommern-Deaths',
    'Sachsen-Anhalt-Deaths': 'Sachsen-Anhalt-Deaths',
    'Thüringen-Deaths': 'Thüringen-Deaths',
    'Brandenburg-Deaths': 'Brandenburg-Deaths',
    'Saarland-Deaths': 'Saarland-Deaths',
    'Schles­wig-Holstein-Deaths': 'Schleswig-Holstein-Deaths',
    'Sachsen-Deaths': 'Sachsen-Deaths',
    'Hamburg-Deaths': 'Hamburg-Deaths',
    'Berlin-Deaths': 'Berlin-Deaths',
    'Rhein­land-Pfalz-Deaths': 'Rheinland-Pfalz-Deaths',
    'Hessen-Deaths': 'Hessen-Deaths',
    'Niedersachsen-Deaths': 'Niedersachsen-Deaths',
    'Baden-Württem­berg-Deaths': 'Baden-Württemberg-Deaths',
    'Nordrhein-West­falen-Deaths': 'Nordrhein-Westfalen-Deaths',
    'Bayern-Deaths': 'Bayern-Deaths',
}

east_de = [
    "Mecklenburg-Vorpommern", "Sachsen-Anhalt", "Thüringen", "Brandenburg",
    "Sachsen"
]
west_de = [
    "Bremen", "Saarland", "Schleswig-Holstein", "Hamburg", "Berlin",
    "Rheinland-Pfalz", "Hessen", "Niedersachsen", "Baden-Württemberg",
    "Nordrhein-Westfalen", "Bayern"
]

de_population = {
    'Germany': 83.00,
    'East-Germany': 12.55,
    'West-Germany': 70.45,
    'Bremen': 0.68,
    'Mecklenburg-Vorpommern': 1.61,
    'Sachsen-Anhalt': 2.21,
    'Thüringen': 2.14,
    'Brandenburg': 2.51,
    'Saarland': 0.99,
    'Schleswig-Holstein': 2.90,
    'Sachsen': 4.08,
    'Hamburg': 1.84,
    'Berlin': 3.64,
    'Rheinland-Pfalz': 4.08,
    'Hessen': 6.27,
    'Niedersachsen': 7.98,
    'Baden-Württemberg': 11.07,
    'Nordrhein-Westfalen': 17.93,
    'Bayern': 13.07,
}

# covid-19-eu-data
coviddata_eudata_de = pd.read_csv(
    os.environ['HOME'] + "/covid19/data/covid19-eu-data/dataset/covid-19-de.csv",
    sep=',',
)

coviddata_eudata_fr = pd.read_csv(
    os.environ['HOME'] + "/covid19/data/covid19-eu-data/dataset/covid-19-fr.csv",
    sep=',',
)

coviddata_eudata_ecdc = pd.read_csv(
    os.environ['HOME'] + "/covid19/data/covid19-eu-data/dataset/covid-19-ecdc.csv",
    sep=',',
)


def coviddata_eudata_germany():
    """
    Dataframe with columns for countries and regions and date=-index input from eudata repository data
    """
    # Drop unneeded
    coviddata_eudata_full = coviddata_eudata_de.drop(
        ["country", "cases/100k pop."], axis=1)

    # Rename
    coviddata_eudata_full = coviddata_eudata_full.rename(
        {
            "cases": "Confirmed",
            "deaths": "Deaths",
            "nuts_1": "state"
        }, axis=1)

    # List of Bundesländer
    bundeslaender = np.array(coviddata_eudata_full['state'][-16:])

    # Fill Bundesländer as columns
    for land in bundeslaender:
        coviddata_eudata_land = coviddata_eudata_full[
            coviddata_eudata_full["state"] == land]
        coviddata_eudata_land = coviddata_eudata_land.rename(
            {
                "Confirmed": land,
                "Deaths": land + "-Deaths"
            }, axis=1)
        coviddata_eudata_land = coviddata_eudata_land.drop(["state"], axis=1)
        coviddata_eudata_land.index = pd.to_datetime(
            coviddata_eudata_land["datetime"], utc=True)
        coviddata_eudata_land = coviddata_eudata_land.drop("datetime", axis=1)

        if land == bundeslaender[0]:
            coviddata_eudata = coviddata_eudata_land
        else:
            coviddata_eudata[land] = coviddata_eudata_land[land]
        coviddata_eudata[land + "-Deaths"] = coviddata_eudata_land[land +
                                                                   "-Deaths"]
    # Rename Bundesländer
    # coviddata_eudata = coviddata_eudata.rename(de_naming, axis=1)

    # Sums for Germany
    coviddata_eudata["Germany"] = coviddata_eudata[[
        col for col in coviddata_eudata.columns if not "Deaths" in col
    ]].sum(axis=1)
    coviddata_eudata["East-Germany"] = coviddata_eudata[[
        col for col in east_de]].sum(axis=1)
    coviddata_eudata["West-Germany"] = coviddata_eudata[[
        col for col in west_de]].sum(axis=1)
    coviddata_eudata["Germany-Deaths"] = coviddata_eudata[[
        col for col in coviddata_eudata.columns if "Deaths" in col
    ]].sum(axis=1)
    coviddata_eudata["East-Germany-Deaths"] = coviddata_eudata[[
        col+"-Deaths" for col in east_de]].sum(axis=1)
    coviddata_eudata["West-Germany-Deaths"] = coviddata_eudata[[
        col+"-Deaths" for col in west_de]].sum(axis=1)

    return coviddata_eudata


def coviddata_eudata_france():
    """
    Dataframe with columns for countries and regions and date=-index input from eudata repository data
    """
    # Drop unneeded
    coviddata_eudata_full = coviddata_eudata_fr.drop(["country"], axis=1)

    # Rename
    coviddata_eudata_full = coviddata_eudata_full.rename(
        {
            "cases": "Confirmed",
            "nuts_2": "state"
        }, axis=1)

    # List of states
    districts = np.array(coviddata_eudata_full["state"][-22:])

    for land in districts:
        coviddata_eudata_land = coviddata_eudata_full[
            coviddata_eudata_full["state"] == land]
        coviddata_eudata_land = coviddata_eudata_land.rename(
            {"Confirmed": land}, axis=1)
        coviddata_eudata_land = coviddata_eudata_land.drop(["state"], axis=1)
        coviddata_eudata_land.index = pd.to_datetime(
            coviddata_eudata_land["datetime"], utc=True)
        coviddata_eudata_land = coviddata_eudata_land.drop("datetime", axis=1)

        if land == districts[0]:
            coviddata_eudata = coviddata_eudata_land
        else:
            coviddata_eudata[land] = coviddata_eudata_land[land]

    # Sums for France
    coviddata_eudata["France"] = coviddata_eudata[[
        col for col in coviddata_eudata.columns if not "Deaths" in col
    ]].sum(axis=1)
    coviddata_eudata["France-Deaths"] = coviddata_eudata[[
        col for col in coviddata_eudata.columns if "Deaths" in col
    ]].sum(axis=1)

    return coviddata_eudata


def coviddata_eudata_europe():
    """
    Dataframe with columns for countries and regions and date=-index input from eudata repository data
    """
    # Take input
    coviddata_eudata_full = coviddata_eudata_ecdc

    # Rename
    coviddata_eudata_full = coviddata_eudata_full.rename(
        {
            "cases": "Confirmed",
            "deaths": "Deaths"
        }, axis=1)

    # First try
    coviddata_eudata = coviddata_eudata_full[coviddata_eudata_full["country"]
                                             == "sum"]
    coviddata_eudata = coviddata_eudata.rename(
        {
            "Confirmed": ecdc_naming["sum"],
            "Deaths": ecdc_naming["sum"] + "-Deaths"
        },
        axis=1)
    coviddata_eudata = coviddata_eudata.drop(["country"], axis=1)
    coviddata_eudata.index = pd.to_datetime(coviddata_eudata["datetime"], utc=True)
    coviddata_eudata = coviddata_eudata.drop("datetime", axis=1)

    # List of EU-countries
    eu_countries = np.array(coviddata_eudata_full["country"][-17:-1])

    for land in eu_countries:
        coviddata_eudata_land = coviddata_eudata_full[
            coviddata_eudata_full["country"] == land]
        coviddata_eudata_land = coviddata_eudata_land.rename(
            {
                "Confirmed": ecdc_naming[land],
                "Deaths": ecdc_naming[land] + "-Deaths"
            },
            axis=1)
        coviddata_eudata_land = coviddata_eudata_land.drop(["country"], axis=1)
        coviddata_eudata_land.index = pd.to_datetime(
            coviddata_eudata_land["datetime"], utc=True)
        coviddata_eudata_land = coviddata_eudata_land.drop("datetime", axis=1)

        coviddata_eudata[ecdc_naming[land]] = coviddata_eudata_land[
            ecdc_naming[land]]
        coviddata_eudata[ecdc_naming[land] +
                         "-Deaths"] = coviddata_eudata_land[ecdc_naming[land] +
                                                            "-Deaths"]

    return coviddata_eudata
