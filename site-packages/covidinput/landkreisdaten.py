'''
Landkreis data from https://github.com/jgehrcke/covid-19-germany-gae
'''
import os
import numpy as np
import pandas as pd
import covidfuncs.dffuncs as cvdff
import covidinput.landkreise as landkreise

coviddata_rki = pd.read_csv(
    os.environ['HOME'] + "/covid19/data/covid-19-germany-gae/cases-rki-by-ags.csv",
    sep=',',
)

coviddata_risklayer = pd.read_csv(
    os.environ['HOME'] +
    "/covid19/data/covid-19-germany-gae/cases-rl-crowdsource-by-ags.csv",
    sep=',',
)

landkreis_meta = landkreise.landkreisdata


def coviddata_landkreise(switch="rki"):
    """
    Dataframe with columns for Landkreise and date=-index input from gae repository

    https://github.com/jgehrcke/covid-19-germany-gae

    """

    if switch == "rki":
        coviddata_landkreise = coviddata_rki
    elif switch == "rl":
        coviddata_landkreise = coviddata_risklayer

    # Rename Landkreise from AGS specifier
    for rs in coviddata_landkreise.columns[1:]:

        if rs == "11000":
            landkreisname = "Berlin"
        elif rs == "sum_cases":
            landkreisname = "Germany"
        elif rs == "3152":
            landkreisname = "Unbekannt"
        else:
            landkreisname = (list(
                landkreis_meta["BEZ"][landkreis_meta["RS"] == np.int(rs)])[0] +
                             " " + list(landkreis_meta["GEN"][
                                 landkreis_meta["RS"] == np.int(rs)])[0])

        coviddata_landkreise = coviddata_landkreise.rename(
            {
                rs: landkreisname,
            }, axis=1)

    # Time index handling
    coviddata_landkreise.index = pd.to_datetime(
        coviddata_landkreise["time_iso8601"].astype(str).str[:-6])
    coviddata_landkreise = coviddata_landkreise.drop("time_iso8601", axis=1)

    # np.float64 type
    coviddata_landkreise = coviddata_landkreise.apply(np.float64)

    return coviddata_landkreise
