import os
import numpy as np
import pandas as pd
import covidfuncs.dffuncs as cvdff

coviddata_zeit = pd.read_csv(
    os.environ['HOME'] + "/covid19/covid-19-germany-gae/data.csv",
    sep=',',
)

zeit_naming = {
    'Germany': "sum",  #
    'Mecklenburg-Vorpommern': "DE-MV",  #
    'Bremen': "DE-HB",  #
    'Thüringen': "DE-TH",  #
    'Saarland': "DE-SL",  #
    'Brandenburg': "DE-BB",  #
    'Sachsen-Anhalt': "DE-ST",  #
    'Schleswig-Holstein': "DE-SH",  #
    'Sachsen': "DE-SN",  #
    'Hamburg': "DE-HH",  #
    'Berlin': "DE-BE",  #
    'Hessen': "DE-HE",  #
    'Rheinland-Pfalz': "DE-RP",  #
    'Niedersachsen': "DE-NI",  #
    'Bayern': "DE-BY",  #
    'Baden-Württemberg': "DE-BW",  #
    'Nordrhein-Westfalen': "DE-NW"  #
}

def coviddata_zeit_germany():
    """
    Dataframe with columns for countries and regions and date=-index input from zeit repository data
    """
    # Drop unneeded
    coviddata_zeit_germany = coviddata_zeit.drop(
        ["source"], axis=1)

    # Rename
    for entry, zeitentry in zeit_naming.items():
        coviddata_zeit_germany = coviddata_zeit_germany.rename(
            {
                zeitentry+"_cases": entry,
                zeitentry+"_deaths": entry+" Deaths",
                }, axis=1)

    coviddata_zeit_germany.index = pd.to_datetime(
        coviddata_zeit_germany["time_iso8601"].astype(str).str[:-6])
    coviddata_zeit_germany = coviddata_zeit_germany.drop("time_iso8601", axis=1)

    for entry in coviddata_zeit_germany.columns:
        coviddata_zeit_germany[entry] = coviddata_zeit_germany[entry].apply(np.float64)

    return coviddata_zeit_germany
