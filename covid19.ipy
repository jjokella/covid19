import pandas as pd
import numpy as np
import seaborn as sns
import scipy.optimize as sco
import matplotlib.ticker
import matplotlib.pyplot as plt
import matplotlib.dates as dates
import covidfuncs.datfuncs as cvdf
import covidfuncs.dffuncs as cvdff
import covidinput.csse as csse
import covidinput.who as who
import covidinput.eudata as eudata
import covidplots as cvp

sns.set_context('talk')
plt.style.use('seaborn-whitegrid')

# Input -----------------------------------------------------

# CSSE-JHU Data, Germany
countries = ["Germany"]  # 11: Germany, 157: Korea, South
coviddata_csse = csse.coviddata_csse(countries)
cvdff.add_log(coviddata_csse, countries[0])
cvdff.add_growth_factor(coviddata_csse, countries[0])
coviddata_csse.name = ("CSSE-JHU " + countries[0])

coviddata_who = who.coviddata_who(countries)
cvdff.add_log(coviddata_who, countries[0])
cvdff.add_growth_factor(coviddata_who, countries[0])
coviddata_who.name = ("WHO-JHU " + countries[0])

# Robert Koch Institut
coviddata_rki = eudata.coviddata_eudata_germany()
coviddata_rki.name = ("Robert-Koch-Institut Germany")
cvdff.add_log(coviddata_rki, "Germany")
cvdff.add_growth_factor(coviddata_rki, "Germany")

# SPF, Frankreich, händischer Input
coviddata_spf = eudata.coviddata_eudata_france()
coviddata_spf.name = ("Santé-Publique France ")
cvdff.add_log(coviddata_spf, "France")
cvdff.add_growth_factor(coviddata_spf, "France")

# Fits -----------------------------------------------------

# Fit exponential
startdat = pd.Timestamp("2020/03/01")
cvdff.add_exponential_fit(coviddata_csse, countries[0], startdat)
cvdff.add_exponential_fit(coviddata_who, countries[0], startdat)
cvdff.add_exponential_fit(coviddata_rki, "Germany", startdat)

# Plots -----------------------------------------------------------
cvdf.add_x(coviddata_csse)
cvdf.add_x(coviddata_who)
cvdf.add_x(coviddata_rki)

# Plot 1
line_styles = ['-', ':', '--', '-.']
n_colors = 8

sns.set_palette(sns.hls_palette(n_colors, l=.45, s=.8))  # 8 countries max
fig, ax = plt.subplots(figsize=(15, 8))

cvp.plot_countries(coviddata_csse, ["Germany"],
                   min_confirmed=100,
                   legendlabel=" CSSE")
cvp.plot_countries(coviddata_who, ["Germany"],
                   min_confirmed=100,
                   legendlabel=" WHO")
cvp.plot_countries(coviddata_rki, ["Germany"],
                   min_confirmed=100,
                   legendlabel=" RKI")
cvp.plot_countries(coviddata_csse, ["Germany Fit (Exp)"],
                   min_confirmed=100,
                   ls="-",
                   marker="",
                   legendlabel=" CSSE")
cvp.plot_countries(coviddata_who, ["Germany Fit (Exp)"],
                   min_confirmed=100,
                   ls="-",
                   marker="",
                   legendlabel=" WHO")
cvp.plot_countries(coviddata_rki, ["Germany Fit (Exp)"],
                   min_confirmed=100,
                   ls="-",
                   marker="",
                   legendlabel=" RKI")

ax.set_position([0.1, 0.1, 0.7, 0.8])
ax.set(
    # yscale='log',
    title='Exponential growth of COVID-19 across countries',
    xlabel='Days',
    ylabel='Confirmed cases')
ax.get_yaxis().set_major_formatter(matplotlib.ticker.ScalarFormatter())
ax.legend(bbox_to_anchor=(1.0, 1.0))

plt.show()

# Plot 2
line_styles = ['-', ':', '--', '-.']
n_colors = 3

sns.set_palette(sns.hls_palette(n_colors, l=.45, s=.8))  # 8 countries max
fig, ax = plt.subplots(figsize=(15, 8))

cvp.plot_countries(coviddata_csse, ["Germany (Log)"],
                   min_confirmed=2.0,
                   legendlabel=" CSSE")
cvp.plot_countries(coviddata_who, ["Germany (Log)"],
                   min_confirmed=2.0,
                   legendlabel=" WHO")
cvp.plot_countries(coviddata_rki, ["Germany (Log)"],
                   min_confirmed=2.0,
                   legendlabel=" RKI")
cvp.plot_countries(coviddata_csse, ["Germany Fit (Log)"],
                   min_confirmed=2.0,
                   ls="-",
                   marker="",
                   legendlabel=" CSSE")
cvp.plot_countries(coviddata_who, ["Germany Fit (Log)"],
                   min_confirmed=2.0,
                   ls="-",
                   marker="",
                   legendlabel=" WHO")
cvp.plot_countries(coviddata_rki, ["Germany Fit (Log)"],
                   min_confirmed=2.0,
                   ls="-",
                   marker="",
                   legendlabel=" RKI")
ax.set_position([0.1, 0.1, 0.7, 0.8])

# 28000 ICU beds total, 80% occupied, 5% critical symptoms
icu_germany = 28000
icu_germany_free = .2
p_crit = .05
ax.axhline(np.log10(icu_germany / p_crit),
           color='.3',
           ls='-.',
           label='Total ICU beds')
ax.axhline(np.log10(icu_germany * icu_germany_free / p_crit),
           color='.5',
           ls=':',
           label='Free ICU beds')

ax.set(
    # yscale='log',
    title='Exponential growth of COVID-19 across countries',
    xlabel='Days',
    ylabel='Confirmed cases (log)')
ax.get_yaxis().set_major_formatter(matplotlib.ticker.ScalarFormatter())
ax.legend(bbox_to_anchor=(1.0, 1.0))
plt.show()

# Plot 3
line_styles = ['-', ':', '--', '-.']
n_colors = 3

sns.set_palette(sns.hls_palette(n_colors, l=.45, s=.8))  # 8 countries max
fig, ax = plt.subplots(figsize=(15, 8))

cvp.plot_countries(coviddata_csse, ["Germany (Growth Factor)"],
                   min_confirmed=0.0,
                   legendlabel=" CSSE")
cvp.plot_countries(coviddata_who, ["Germany (Growth Factor)"],
                   min_confirmed=0.0,
                   legendlabel=" WHO")
cvp.plot_countries(coviddata_rki, ["Germany (Growth Factor)"],
                   min_confirmed=0.0,
                   legendlabel=" RKI")
cvp.plot_countries(coviddata_csse, ["Germany Fit (Exp) (Growth Factor)"],
                   min_confirmed=0.0,
                   ls="-",
                   marker="",
                   legendlabel=" CSSE")
cvp.plot_countries(coviddata_who, ["Germany Fit (Exp) (Growth Factor)"],
                   min_confirmed=0.0,
                   ls="-",
                   marker="",
                   legendlabel=" WHO")
cvp.plot_countries(coviddata_rki, ["Germany Fit (Exp) (Growth Factor)"],
                   min_confirmed=0.0,
                   ls="-",
                   marker="",
                   legendlabel=" RKI")

ax.set_position([0.1, 0.1, 0.7, 0.8])
ax.set(
    # yscale='log',
    title='Growth Rate of COVID-19',
    xlabel='Days',
    ylabel='Confirmed cases (log)')
ax.get_yaxis().set_major_formatter(matplotlib.ticker.ScalarFormatter())
ax.legend(bbox_to_anchor=(1.0, 1.0))

plt.show()
