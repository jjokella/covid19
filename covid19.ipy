import pandas as pd
import numpy as np
import scipy.optimize as sco
import matplotlib.pyplot as plt
import matplotlib.dates as dates
import covidfuncs.datfuncs as cvdf
import covidfuncs.csse_input as cvcssein
import covidfuncs.dffuncs as cvdff

# Dates of years 2019/2020
x_dates = pd.DataFrame([
    cvdf.dat_to_int(dat) for dat in
    [pd.Timestamp("2019/01/01") + pd.Timedelta(days=i) for i in range(731)]
],
                       index=[
                           pd.Timestamp("2019/01/01") + pd.Timedelta(days=i)
                           for i in range(731)
                       ],
                       columns=["x"])

# CSSE-JHU Data, Germany
n_country = 11  # 11: Germany, 157: Korea, South
coviddata_csse = cvcssein.coviddata_csse(n_country,
                                         is_add_log=True,
                                         is_add_growth_factor=True)

# Robert Koch Institut, händischer Input
rki_startdat = pd.Timestamp("2020/03/04")
rki_input = np.array(
    [262, 400, 639, 795, 902, 1139, 1296, 1567, 2369, 3062, 3795, 4838, 6012])
coviddata_rki = pd.DataFrame(
    rki_input,
    index=x_dates[rki_startdat:rki_startdat +
                  pd.Timedelta(days=len(rki_input) - 1)].index,
    columns=["Confirmed"])
coviddata_rki.name = ("Robert-Koch-Institut Germany")
coviddata_rki = cvdff.add_log(coviddata_rki, "Confirmed")
coviddata_rki = cvdff.add_growth_factor(coviddata_rki, "Confirmed")

# SPF, Frankreich, händischer Input
spf_startdat = pd.Timestamp("2020/03/15")
spf_input = np.array([5423, 6633])
coviddata_spf = pd.DataFrame(
    spf_input,
    index=x_dates[spf_startdat:spf_startdat +
                  pd.Timedelta(days=len(spf_input) - 1)].index,
    columns=["Confirmed"])
coviddata_spf.name = ("Santé-Publique France ")
coviddata_spf = cvdff.add_log(coviddata_spf, "Confirmed")
coviddata_spf = cvdff.add_growth_factor(coviddata_spf, "Confirmed")

# Fit exponential
startdat = pd.Timestamp("2020/03/01")
cvdff.add_exponential_fit(coviddata_csse, "Confirmed", startdat)
# x_csse = x_dates[coviddata_csse.index[0]:coviddata_csse.index[-1]]

# fit_csse = np.poly1d(
#     np.polyfit(x_csse[startdat:]["x"],
#                coviddata_csse["Confirmed (Log)"][startdat:], 1))

# coviddata_csse["Fit (Log)"] = pd.Series(fit_csse(x_csse["x"]),
#                                         index=coviddata_csse.index)
# coviddata_csse["Fit (Exp)"] = pd.Series(
#     np.exp(np.log(10) * fit_csse(x_csse["x"])),
#     index=coviddata_csse.index,
# )
# coviddata_csse["Fit (Growth Factor)"] = coviddata_csse[
#     "Fit (Exp)"] / coviddata_csse["Fit (Exp)"].shift(1)

x_rki = x_dates[coviddata_rki.index[0]:coviddata_rki.index[-1]]
fit_rki = np.poly1d(
    np.polyfit(x_rki[startdat:]["x"],
               coviddata_rki["Confirmed (Log)"][startdat:], 1))

coviddata_rki["Fit (Log)"] = pd.Series(fit_rki(x_rki["x"]),
                                       index=coviddata_rki.index)
coviddata_rki["Fit (Exp)"] = pd.Series(
    np.exp(np.log(10) * fit_rki(x_rki["x"])),
    index=coviddata_rki.index,
)
coviddata_rki["Fit (Growth Factor)"] = coviddata_rki[
    "Fit (Exp)"] / coviddata_rki["Fit (Exp)"].shift(1)

# Plots -----------------------------------------------------------

# Plot 1
coviddata_csse["Confirmed"][34:].plot(
    style='ko-',
    ms=4,
    lw=1,
    # ylim=[ymin, ymax],
    # yticks=range(ymin, ymax, 500),
    legend=True,
    grid=True)
coviddata_rki["Confirmed"].plot(
    style='o-',
    ms=4,
    lw=1,
    c="darkred",
    # ylim=[ymin, ymax],
    # yticks=range(ymin, ymax, 500),
    legend=True,
    grid=True)
coviddata_csse["Fit (Exp)"][34:].plot(
    style='-',
    lw=2,
    c="k",
    # ylim=[ymin, ymax],
    # yticks=range(ymin, ymax, 500),
    grid=True)
coviddata_rki["Fit (Exp)"].plot(
    style='-',
    lw=2,
    c="darkred",
    # ylim=[ymin, ymax],
    # yticks=range(ymin, ymax, 500),
    grid=True)
plt.legend([
    coviddata_csse.name, coviddata_rki.name, coviddata_csse.name + " Fit",
    coviddata_rki.name + " Fit"
])
coviddata_csse["Confirmed (Log)"][34:].plot(
    style='ko--',
    ms=4,
    lw=1,
    # ylim=[ymin, ymax],
    # yticks=range(ymin, ymax, 500),
    legend=False,
    secondary_y=True,
    grid=True)
coviddata_rki["Confirmed (Log)"].plot(
    style='o--',
    ms=4,
    lw=1,
    c="darkred",
    # ylim=[ymin, ymax],
    # yticks=range(ymin, ymax, 500),
    legend=False,
    secondary_y=True,
    grid=True)
coviddata_rki["Fit (Log)"].plot(
    style='--',
    lw=2,
    c="darkred",
    # ylim=[ymin, ymax],
    # yticks=range(ymin, ymax, 500),
    secondary_y=True,
    grid=True)
coviddata_csse["Fit (Log)"][34:].plot(
    style='--',
    lw=2,
    c="k",
    # ylim=[ymin, ymax],
    # yticks=range(ymin, ymax, 500),
    secondary_y=True,
    grid=True)
plt.title("Fallzahlen Covid-19")
plt.show()

# Plot 2
coviddata_csse["Confirmed (Growth Factor)"][34:].plot(
    style='ko-',
    ms=4,
    lw=1,
    ylim=[0.0, 3.0],
    # yticks=range(ymin, ymax, 500),
    legend=True,
    grid=True)
coviddata_rki["Confirmed (Growth Factor)"].plot(
    style='o-',
    ms=4,
    lw=1,
    ylim=[0.0, 3.0],
    c="darkred",
    # yticks=range(ymin, ymax, 500),
    legend=True,
    grid=True)
coviddata_csse["Fit (Growth Factor)"][34:].plot(
    style='-',
    ms=4,
    lw=2,
    ylim=[0.0, 3.0],
    c="k",
    # yticks=range(ymin, ymax, 500),
    legend=True,
    grid=True)
coviddata_rki["Fit (Growth Factor)"].plot(
    style='-',
    ms=4,
    lw=2,
    ylim=[0.0, 3.0],
    c="darkred",
    # yticks=range(ymin, ymax, 500),
    legend=True,
    grid=True)
plt.legend([
    coviddata_csse.name, coviddata_rki.name, coviddata_csse.name + " Fit",
    coviddata_rki.name + " Fit"
])
plt.title("Faktor zum vorherigen Tag, Covid-19")
plt.show()

# Infected beginning of April
# extrapoldat = "2020/04/01"
# print("Infected at date " + extrapoldat)
# print(
#     "CSSE-JHU: ",
#     np.int64(
#         np.round(
#             np.exp(
#                 np.log(10) *
#                 fit_csse(cvdf.dat_to_int(pd.Timestamp(extrapoldat)))))))
# print(
#     "RKI     : ",
#     np.int64(
#         np.round(
#             np.exp(
#                 np.log(10) *
#                 fit_rki(cvdf.dat_to_int(pd.Timestamp(extrapoldat)))))))
