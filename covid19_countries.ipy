import pandas as pd
import numpy as np
import matplotlib.ticker
import matplotlib.pyplot as plt
import matplotlib.dates as dates
import matplotlib.cm as cm
import seaborn as sns
import covidfuncs.datfuncs as cvdf
import covidfuncs.dffuncs as cvdff
import covidinput.csse as csse
import covidinput.eudata as eudata
import covidplots as cvp

min_confirmed = 1

countries = [
    "Germany",  #
    "Italy",  #
    "France",  #
    "Belgium",  #
    "Spain",  #
    "Netherlands",  #
    "US",  #
    "Korea, South",  #
    "Sweden",  #
    "United Kingdom", #
    "Austria", #
    # "Poland",  #
    # "China", #
    # "Chile", #
]  #["US", "Korea, South", "China"]

coviddata_csse = csse.coviddata_csse(countries, switch="Deaths")
cvdf.add_x(coviddata_csse)
for country in countries:
    coviddata_csse[country] = coviddata_csse[country]/csse.population[country]

# countries = [
#     'Germany',  #
#     # 'Mecklenburg-Vorpommern',  #
#     # 'Bremen',  #
#     # 'Thüringen',  #
#     # 'Saarland',  #
#     # 'Brandenburg',  #
#     # 'Sachsen-Anhalt',  #
#     # 'Schleswig-Holstein',  #
#     # 'Sachsen',  #
#     # 'Hamburg',  #
#     # 'Berlin',  #
#     'Hessen',  #
#     # 'Rheinland-Pfalz',  #
#     'Niedersachsen',  #
#     'Bayern',  #
#     'Baden-Württemberg',  #
#     'Nordrhein-Westfalen'  #
# ]
# coviddata_csse = eudata.coviddata_eudata_germany()
# # countries = [col for col in coviddata_csse.columns if not "Deaths" in col]
# cvdf.add_x(coviddata_csse)

# countries = [
#     'France',  #
#     # 'Saint-Barthélémy',  #
#     # 'Mayotte',  #
#     # 'Saint-Martin',  #
#     # 'Guyane',  #
#     # 'La Réunion',  #
#     # 'Martinique',  #
#     # 'Guadeloupe',  #
#     # 'Oversea',  #
#     # 'Pays de la Loire',  #
#     # 'Centre-Val de Loire',  #
#     # 'Corse',  #
#     # 'Normandie',  #
#     # 'Nouvelle-Aquitaine',  #
#     # 'Bretagne',  #
#     # 'Occitanie',  #
#     'Provence-Alpes-Côte d’Azur',  #
#     # 'Bourgogne-Franche-Comté',  #
#     # 'Hauts-de-France',  #
#     # 'Auvergne-Rhône-Alpes',  #
#     'Grand Est',  #
#     'Ile-de-France',  #
#     # 'Metropolis'  #
# ]
# coviddata_csse = eudata.coviddata_eudata_france()
# cvdf.add_x(coviddata_csse)

window_td = 6.9
for country_name in coviddata_csse.columns:
    cvdff.add_growth_factor(coviddata_csse, country_name)
    cvdff.add_log(coviddata_csse, country_name)
    cvdff.add_diff(coviddata_csse, country_name)
    cvdff.add_tdouble(coviddata_csse, country_name, window=window_td)

# Plots -----------------------------------------------------------

# Plot 1
sns.set_palette(sns.hls_palette(len(countries), l=.45,
                                s=.8))  # 8 countries max
fig, ax = plt.subplots(figsize=(15, 8))

# countries = [country+" (Log)" for country in countries]
cvp.plot_countries(coviddata_csse,
                   countries,
                   min_confirmed=min_confirmed,
                   norm_min_confirmed=True,
                   max_num_entries=14,
                   legendlabel=" CSSE",
                   same_start=True)

ax.set_position([0.1, 0.1, 0.8, 0.8])
ax.set(
    # yscale='log',
    title='Exponential growth of COVID-19 across countries',
    xlabel='Days',
    ylabel='Confirmed cases/deaths',
)
ax.get_yaxis().set_major_formatter(matplotlib.ticker.ScalarFormatter())
ax.legend()

plt.show()

# Plot 2
sns.set_palette(sns.hls_palette(len(countries), l=.45,
                                s=.8))  # 8 countries max
fig, ax = plt.subplots(figsize=(15, 8))

for country_name in countries:
    coviddata_csse[country_name + " (Growth Factor)"].shift(0).plot(
        style='o-',
        # ms=4,
        # lw=1,
        # c=colors[country_name],
        # ylim=[ymin, ymax],
        # yticks=range(ymin, ymax, 500),
        legend=True,
        grid=True)

ax.set_position([0.1, 0.1, 0.8, 0.8])
ax.set(title='Growth Factor of COVID-19 across countries',
       xlabel='Dates',
       ylabel='Growth Factor',
       ylim=[0.0, 3.0])
ax.get_yaxis().set_major_formatter(matplotlib.ticker.ScalarFormatter())
ax.legend(bbox_to_anchor=(1.0, 1.0))

plt.show()

# Plot 3
sns.set_palette(sns.hls_palette(len(countries), l=.45,
                                s=.8))  # 8 countries max
fig, ax = plt.subplots(figsize=(15, 8))

for country_name in countries:
    coviddata_csse[country_name + " Diff"].shift(0).plot(
        style='o-',
        # ms=4,
        # lw=1,
        # c=colors[country_name],
        # ylim=[ymin, ymax],
        # yticks=range(ymin, ymax, 500),
        legend=True,
        grid=True)

ax.set_position([0.1, 0.1, 0.7, 0.8])
ax.set(
    title='Exponential growth of COVID-19 across countries',
    xlabel='Dates',
    ylabel='New Cases',
    # ylim=[0.0,3.0]
)
ax.get_yaxis().set_major_formatter(matplotlib.ticker.ScalarFormatter())
ax.legend(bbox_to_anchor=(1.0, 1.0))

plt.show()

# Plot 4
sns.set_palette(sns.hls_palette(len(countries), l=.45,
                                s=.8))  # 8 countries max
fig, ax = plt.subplots(figsize=(15, 8))

for country_name in countries:
    cvp.plot_countries(coviddata_csse, [country_name + " TDouble" + str(window_td)],
                   min_confirmed=1.0,
                   legendlabel=" CSSE")

ax.set_position([0.1, 0.1, 0.7, 0.8])
ax.set(
    title='T-Double plot of COVID-19 in countries',
    xlabel='Days',
    ylabel='Doubling time [days]',
    ylim=[100.0,0.0]
)
ax.get_yaxis().set_major_formatter(matplotlib.ticker.ScalarFormatter())
ax.legend(bbox_to_anchor=(1.0, 1.0))

plt.show()
