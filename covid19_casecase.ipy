import pandas as pd
import numpy as np
import seaborn as sns
import scipy.optimize as sco
import matplotlib.ticker
import matplotlib.pyplot as plt
import matplotlib.dates as dates
import covidfuncs.datfuncs as cvdf
import covidfuncs.dffuncs as cvdff
import covidinput.csse as csse
import covidinput.who as who
import covidinput.eudata as eudata
import covidinput.zeit as zeit
import covidinput.landkreisdaten as lkdt
import covidplots as cvp

# Idea for this plot: Minute Physics

sns.set_context('talk')
plt.style.use('seaborn-whitegrid')

switch="Deaths"              # "Deaths" / "Confirmed"

countries = [
    "Germany",  #
    "Italy",  #
    "France",  #
    # "Belgium",  #
    "Spain",  #
    # "Netherlands",  #
    "US",  #
    "Korea, South",  #
    # "Sweden",  #
    "United Kingdom",  #
    # "Poland",  #
    # "China",  #
    # "Chile", #
]  #["US", "Korea, South", "China"]
coviddata_csse = csse.coviddata_csse(countries, switch=switch)
cvdf.add_x(coviddata_csse)

# countries = [
#     'Germany',  #
#     # 'Mecklenburg-Vorpommern',  #
#     # 'Bremen',  #
#     # 'Thüringen',  #
#     # 'Saarland',  #
#     # 'Brandenburg',  #
#     # 'Sachsen-Anhalt',  #
#     # 'Schleswig-Holstein',  #
#     # 'Sachsen',  #
#     # 'Hamburg',  #
#     # 'Berlin',  #
#     'Hessen',  #
#     # 'Rheinland-Pfalz',  #
#     'Niedersachsen',  #
#     'Bayern',  #
#     'Baden-Württemberg',  #
#     'Nordrhein-Westfalen'  #
# ]
# coviddata_csse = eudata.coviddata_eudata_germany()
# countries = [col for col in coviddata_csse.columns if "Deaths" in col]
# cvdf.add_x(coviddata_csse)


window = 7.0
min_confirmed = 50

for country_name in coviddata_csse.columns:
    cvdff.add_mov_avg(coviddata_csse, country_name, window=window)

# Plots -----------------------------------------------------------

# Plot 1
sns.set_palette(sns.hls_palette(len(countries), l=.45,
                                s=.8))  # 8 countries max
fig, ax = plt.subplots(figsize=(10, 10))

# countries = [country+" (Log)" for country in countries]
cvp.plot_casecase(coviddata_csse,
                  [country + " MA" + str(window) for country in countries],
                  min_confirmed=min_confirmed,
                  legendlabel=" CSSE")

conf = np.arange(min_confirmed,np.max([coviddata_csse[country].max() for country in countries]),10)
ax.plot(conf,0.05*conf,":k", label="5%")
ax.plot(conf,0.1*conf,"-k", label="10%")
# ax.plot(conf,0.2*conf,"-.k", label="20%")
ax.plot(conf,0.3*conf,"--k", label="30%")

ax.set_position([0.1, 0.1, 0.8, 0.8])
ax.set(
    yscale='log',
    xscale='log',
    title='New '+switch+' of COVID-19 against confirmed '+switch,
    xlabel='Total '+switch,
    ylabel='New '+switch,
)
ax.get_yaxis().set_major_formatter(matplotlib.ticker.ScalarFormatter())
ax.legend()

plt.show()
